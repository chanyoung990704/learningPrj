# Production environment configuration (Ubuntu EC2, MySQL)

# File upload path
upload.dir=/home/ubuntu/uploads/

# MySQL Configuration (import from mysql.properties for credentials)
spring.config.import=classpath:mysql.properties, classpath:api-key.properties, classpath:oauth2.properties

# JPA Configuration
spring.jpa.hibernate.ddl-auto=validate
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=false
spring.jpa.properties.hibernate.highlight_sql=false
spring.jpa.properties.hibernate.connection.characterEncoding=UTF-8
spring.jpa.properties.hibernate.connection.useUnicode=true
spring.jpa.database-platform=org.hibernate.dialect.MySQL8Dialect

# Batch configuration
spring.jpa.properties.hibernate.default_batch_fetch_size=100
spring.jpa.properties.hibernate.jdbc.batch_size=50
spring.jpa.properties.hibernate.order_inserts=true
spring.jpa.properties.hibernate.order_updates=true
spring.jpa.properties.hibernate.query.in_clause_parameter_padding=true
spring.jpa.properties.hibernate.query.fail_on_pagination_over_fetch=false

# Connection pool optimization for production
spring.datasource.hikari.maximum-pool-size=30
spring.datasource.hikari.minimum-idle=10
spring.datasource.hikari.connection-timeout=30000
spring.datasource.hikari.idle-timeout=600000
spring.datasource.hikari.max-lifetime=1800000

# Server optimization
server.tomcat.connection-timeout=5000
server.tomcat.threads.max=200
server.tomcat.accept-count=100
server.tomcat.keep-alive-timeout=60000
server.tomcat.max-connections=10000

# OpenAI Chat configuration
spring.ai.openai.chat.options.model=gpt-4o-mini
spring.ai.openai.chat.options.temperature=0.7

# Security hardening for production
app.admin.secret.key=X-ADMIN-SECRET
app.admin.secret.value=testSecretKey123
